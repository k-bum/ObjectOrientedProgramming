#include <iostream>
#include <string> //string객체 사용
#include <fstream> //ifstream ofstream
#include <iomanip> //setw
#include <stdio.h>
using namespace std;

bool getStu(ifstream& fin, int& id, int& exam1, int& exam2, int& exam3) {
	fin >> id >> exam1 >> exam2 >> exam3;
	if (!fin)
		return false;
	return true;
}
void calcAvgGrade(int exam1, int exam2, int exam3, int& avg, char& grade) {
	avg = (exam1 + exam2 + exam3) / 3;
	if (avg >= 90)
		grade = 'A';
	else if (avg >= 80)
		grade = 'B';
	else
		grade = 'F';
}
void writeStu(ofstream& fout, int id, int avg, char grade) {
	fout.fill('0');
	fout << setw(4) << id;
	fout.fill(' ');
	fout << setw(4) << avg;
	fout << setw(4) << grade << endl;
}

int main() {
	/*
	string s1 = "mouse";
	cout << s1 << endl;
	cout << s1.length() << ", " << s1.size() << endl << endl; //s1의 length, size 출력
	cout << s1.empty() << endl;
	s1.clear();// s1 = "";
	cout << s1.empty() << endl;
	s1 = "Good";
	s1 = s1 + "-bye";
	// Good-bye (string)
	// 01234567 (index)
	cout << s1 << endl;
	cout << s1.at(4) << ", " << s1[4] << endl; // 두가지 방법으로 index 4 값 출력
	cout << s1.compare("Good-bye") + 1 << endl; // s1과 Good-bye 비교 (bool 값 출력)
	cout << s1.compare("good-bye") + 1 << endl; // s1과 good-bye 비교 (bool 값 출력)
	cout << s1.compare("z") + 1 << endl << endl; // s1이 “z”보다 크거나 같은지 비교 (bool 값 출력)
	cout << s1.substr(5, 3) << endl; // s1의 index 5부터 3글자 출력
	cout << s1.substr(2, 2) << endl; // s1의 index 2부터 2글자 출력
	cout << s1.find("od") << endl; // od 위치 출력
	cout << s1.find("od", 5) << endl;
	int od_index = s1.find("od");
	cout << s1.find("od", od_index + 2);
	cout << (s1.find("korea") == string::npos) << endl;
	return 0;
	*/

	/*
	ofstream fout // processor->file 저장
	("example.txt");// example.txt 열기

	string s2 = "Objective Oriented Programming";
	fout << s2 << endl;
	fout << "Random Variables" << endl;
	fout << "Linear Algebra" << endl;
	fout.close(); // fout 닫기

	ifstream fin;
	string s1;
	fin.open("example.txt");// example.txt 열기

	
	if (!fin) {
		cout << "Error, no such file exists" << endl;
		exit(100);
	}
	while (getline(fin, s1)) { // line by line으로 example.txt에서 읽어와서 출력
		cout << s1 << endl;
	}
	*/

	//한번에 실행되지 않기 때문에 주석처리 해놓음
	/*
	char ch;
	while (fin.get(ch)) { // 띄어쓰기 단위로 example.txt에서 읽어와서 출력
		if (ch == ' ') {
			cout << '\n';
		}
		else {
			cout << ch;
		}
	}
	fin.close();
	*/

	/*
	double d1 = 1.23456789;
	cout << d1 << endl;
	cout.setf(ios::fixed); // 출력값 길이 10로 지정
	cout.width(10);
	cout.setf(ios::right);
	cout.precision(2);// 주요 자리수 3자리만 출력
	cout << d1 << endl;

	char ch1;
	char ch2;
	// ch1, ch2 : enter “ z”. ( space + z )
	cin >> ch1;
	cout << "(" << ch1 << ")" << endl;
	cin.ignore(); // enter가 다음 cin으로 들어가지 않도록 해줌
	cin.unsetf(ios::skipws); // space도 입력으로 생각하게 함
	cin >> ch2;
	cout << "(" << ch2 << ")" << endl;
	return 0;
	*/

	//반복: 모든 학생을 읽고 저장할 때까지
		//getStu 함수 = ch7STUFL.DAT에서 파일 읽기: id, exam1, exam2, exam3
		//calcAvgGrade 함수 = 평균,grade 계산: exam1, exam2, exam3 -> avg, grade
		//writeStu 함수 = grade.txt 저장: id, avg, grade

	/*
	ofstream fout("grade.txt");
	ifstream fin("ch7STUFL.DAT");

	int id, exam1, exam2, exam3, avg;
	char grade;
	while (getStu(fin ,id, exam1, exam2, exam3)) { // getStu함수 사용
		calcAvgGrade(exam1, exam2, exam3, avg, grade);// calcAvgGrade함수 사용
		writeStu(fout, id, avg, grade); // writeStu함수 사용
	}
	fin.close();
	fout.close();
	cout << "end" << endl;
	return 0;
	*/

	/*
	string city, area, street, building;
	string address;
	cout << "시 : ";
	cin >> city;
	cout << "구 : ";
	cin >> area;
	cout << "로 : ";
	cin >> street;
	cout << "건물명 : ";
	cin >> building;
	address = city + area + street + building;
	cout << "집 주소 : " << address << endl;
	*/
	
	/*
	string data = "사랑,프로그래밍,의자,사랑의바보,영통역,천년의사랑,냉장고,객체지향";
	string sep = ",";
	string input;
	string output;
	int pos = 0;
	cout << "키워드 : ";
	cin >> input;
	cout << "검색결과 : ";
	while ((pos = data.find(sep)) != string::npos) {
		output = data.substr(0, pos);
		if (output.find(input) != string::npos) {
			cout << output << " ";
		}
		data = data.substr(pos + 1);
	}
	cout << "\n";
	return 0;
	*/
	
	/*
	ofstream fout;
	fout.open("temp.txt");
	int num;
	for (int i = 0; i < 100; i++)
	{
		num = rand() % 101;
		fout << num << " ";
		if (i % 10 == 9)
			fout << endl;
	}
	fout.close();
	return 0;
	*/
	
	/*
	ifstream fin;
	ofstream fout("output.txt");
	char s1;
	fin.open("text1.txt");

	while (fin.get(s1)) {
		fout.put(s1);
	}
	fin.close();
	fin.open("text2.txt");
	while (fin.get(s1)) {
		fout.put(s1);
	}
	fin.close();
	fout.close();
	return 0;
	*/
	
	
	int len;
	char s;
	cout << "legnth = ";
	cin >> len;
	ifstream fin;
	fin.open("input.txt");
	ofstream fout;
	fout.open("output.txt");

	int i = 0;
	while (fin.get(s)) {
		if (s != '\n') {
			fout.put(s);
			i++;
			if (i % len == 0) {
				fout.put('\n');
				i = 0;
			}
		}
	}
	fin.close();
	fout.close();
	
}